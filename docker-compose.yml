version: "3.4"
services:

  # Traefik
  traefik:
    container_name: traefik
    image: traefik:v2.3.6
    restart: always
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
# in prod
#      - --entrypoints.websecure.address=:443
#      - --certificatesresolvers.${CERT_RESOLVER_NAME}.acme.httpchallenge=true
#      - --certificatesresolvers.${CERT_RESOLVER_NAME}.acme.httpchallenge.entrypoint=web
#      - --certificatesresolvers.${CERT_RESOLVER_NAME}.acme.email=${ACME_EMAIL}
#      - --certificatesresolvers.${CERT_RESOLVER_NAME}.acme.storage=${ACME_STORAGE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.docker.network=backend
      - traefik.enable=true
      - traefik.http.routers.api.rule=Host(`${HOSTNAME}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`)) # create router and add PathPrefix
      - traefik.http.routers.api.entrypoints=web
# in prod
#      - traefik.http.routers.api.entrypoints=websecure
#      - traefik.http.routers.api.tls=true
#      - traefik.http.routers.api.tls.certresolver=${CERT_RESOLVER_NAME}
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.middlewares=auth # create middlewares auth
      - traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_ID}:${TRAEFIK_PASSWORD} # hash password in apr1
    ports:
      - '80:80'     # http
      - '443:4443' # https
    networks:
      - backend
      - ms-user_backend_user

networks:
  backend:

  ms-user_backend_user:
    external: true